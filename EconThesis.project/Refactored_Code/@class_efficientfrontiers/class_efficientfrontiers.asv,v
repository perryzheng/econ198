head	1.3;
access;
symbols;
locks; strict;
comment	@# @;
expand	@b@;


1.3
date	2010.04.10.15.45.01;	author xz27;	state Exp;
branches;
next	1.2;

1.2
date	2010.01.14.03.34.04;	author xz27;	state Exp;
branches;
next	1.1;

1.1
date	2009.12.17.20.48.23;	author xz27;	state Exp;
branches;
next	;


desc
@@


1.3
log
@EFplotter working - everything else needs to be fixed
@
text
@
classdef class_efficientfrontiers
    properties
    
        rebalavgPortVal
        rebalavgFundsVals
    end
    methods
        
        function EFplotter(obj, plotcolor)
            
            try 
                obj.portSDs;
                  
                plot(obj.portSDs .* (sqrt(12) * 100), obj.portReturns .* (12 * 100), '-bo','LineWidth',0.5,...
                    'MarkerEdgeColor','k',...
                    'MarkerFaceColor', plotcolor,...                    
                    'MarkerSize',4)
            catch me1
            end
            
            try 
                obj.portCVaRs;
                
                y_monthly_returns = obj.portReturns^(1/obj.samplemonths)-1;
                
                
                x_value = obj.portCVaRs .* (12) * (3 * 1e9);
                y_value = y_monthly_retu
                %plot(obj.portCVaRs .* (12) * (3 * 1e9), obj.portReturns .* (12 * 100), '-bo','LineWidth',0.5,...
                plot(x_value, y_value, '-bo','LineWidth',0.5,...
                    'MarkerEdgeColor','k',...
                    'MarkerFaceColor', plotcolor,...                    
                    'MarkerSize',4)
            catch me2
            end
            
        end
        
        % Rebalancing is inherently GEOMETRIC!
        function rebalancedreturns(obj, simulatedrawreturns, rebalancemonth)
            numsims = size(simulatedrawreturns, 3);
            
            rebalfinalFundvalues = zeros(1, obj.NumPorts, numsims);
            rebalfinalPortvalue = zeros(1, obj.NumPorts, numsims);
            
            for i = 1:numsims
                tempout = calc_rebalance_cashflows_01(obj.portWts, simulatedrawreturns(:, :, i), rebalancemonth);
                rebalfinalFundvalues(:, :, i) = tempout{1};
                rebalfinalPortvalue(:, :, i) = tempout{2};
            end        
            obj.rebalavgFundsVals = mean(rebalfinalFundvalues, 3);
            
            obj.rebalavgPortVal = mean(rebalfinalPortvalue, 3);
            
        end
        
    end
end@


1.2
log
@Refactor (simply put all the necessary methods there) naively all the subclasses of efficient_frontier class.
@
text
@d25 7
a31 1
                plot(obj.portCVaRs .* (12) * (3 * 1e9), obj.portReturns .* (12 * 100), '-bo','LineWidth',0.5,...
d43 1
a43 1
            %
@


1.1
log
@Add subc_fminconCVaREF, subc_givenweightsCVaREF, subc_givenweightsCVaREF and subc_normalmeanvarEF and @@class_efficientfrontier
@
text
@d5 2
a18 2
                

d25 1
a25 1
                plot(obj.portCVaRs .* ((12) * 100), obj.portReturns .* (12 * 100), '-bo','LineWidth',0.5,...
d34 17
a50 2

        
@

