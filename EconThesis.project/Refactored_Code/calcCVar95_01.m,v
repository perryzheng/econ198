head	1.3;
access;
symbols;
locks; strict;
comment	@// @;
expand	@b@;


1.3
date	2010.02.03.18.23.06;	author xz27;	state Exp;
branches;
next	1.2;

1.2
date	2010.02.01.22.49.45;	author xz27;	state Exp;
branches;
next	1.1;

1.1
date	2010.01.20.07.13.08;	author idw3;	state Exp;
branches;
next	;


desc
@@


1.3
log
@*** empty log message ***
@
text
@% calculates the CVar## of a set of return data
% returns must be in column form
% different columns = different funds' returns

% ***simReturnData***: is a numSims x 1 matrix
% where each row one single final return of the portfolio 

% ***Output***: 1 by numFunds row vector containing the CVaR for the fund
function y = calcCVar95_01(simReturnData, lowp)
    numFunds = size(simReturnData, 2);
    CVar = zeros(1, numFunds); % pre allocate
    % to calculate CVaR: sort from lowest to highest return
    % then take average of lowest 5% (x%)
    sortedreturns = sort(simReturnData);
    for i = 1:numFunds
        numReturns = size(simReturnData(:, i), 1);
        lowestpbarrier = lowp * numReturns;
        lowestprounded = ceil(lowestpbarrier);
        lowestptile = sum(sortedreturns(1:lowestprounded, i));
        CVar(1, i) = sum(lowestptile) / lowestprounded;
    end
    y = CVar;
end


@


1.2
log
@More rebalancing for CVaR
@
text
@d5 2
a6 2
% ***simReturnData***: is a numSims x n matrix
% where each row represents final values for each fund for that simulation
@


1.1
log
@"Refactored code works"
@
text
@d5 2
a6 2
% simReturnData is a m x n matrix
% m return periods, n funds
d8 1
@

