head	1.1;
access;
symbols;
locks; strict;
comment	@% @;
expand	@b@;


1.1
date	2010.02.24.19.27.40;	author xz27;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@%% LyX 1.6.5 created this file.  For more info, see http://www.lyx.org/.
%% Do not edit unless you really know what you are doing.
\documentclass[english]{article}
\usepackage[T1]{fontenc}
\usepackage[latin9]{inputenc}
\usepackage{amstext}

\makeatletter

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% LyX specific LaTeX commands.
\newcommand{\lyxline}[1][1pt]{%
  \par\noindent%
  \rule[.5ex]{\linewidth}{#1}\par}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% User specified LaTeX commands.
\usepackage{amsmath}

\makeatother

\usepackage{babel}

\begin{document}

\title{{[}Econ Thesis Title{]}}


\author{Irvin Di Wang and Perry Zheng}


\author{Professor Emma Rasiel, Faculty Advisor}

\maketitle
Honors Thesis submitted in partial fulfillment of the requirements
for Graduation with Distinction in Economics in Trinity College of
Duke University.


\date{Duke University}


\date{Durham, North Carolina}


\date{April 15, 2009}

\pagebreak{}


\section*{Table of Contents}

\pagebreak{}


\section*{Acknowledgements}

\pagebreak{}
\begin{abstract}
{[}Abstract text{]}
\end{abstract}
\pagebreak{}


\section{Introduction}

{[}Introduction text{]}


\section{Background/Literature Review}

{[}Lit review text{]}


\section{Methods}

{[}Methods{]}

{[}Send in a 1 page summary of this to Dr. Rasiel before Wed Feb 10,
2010 meeting{]}

We have reproduced and implemented the concepts of the JPMorgan paper
as a starting point for our investigation of the value of rebalancing
as a consideration for allocating assets in the mean-CVaR framework.
The historical return data of our asset classes benchmarks are first
tested for first order monthly autocorrelation and then 'unsmoothed'
to remove autocorrelation. Next, the historical return data are individually
fit to marginal Generalized Pareto Distributions before combining
the historical correlation matrix and fit to a joint t-Copula distribution.
We then run simulations for monthly returns for 3 years by drawing
out of the joint t-Copula distribution. We optimize our efficient
frontier for return and CVaR based on this simulation dataset only. 

We begin the one-period (buy and hold) CVaR analysis by establishing
a baseline for comparison. The weights of the mean-variance efficient
frontiers for historical arithmetic averages and unsmoothed historical
arithmetic averages are applied to our simulation data to determine
the CVaR and return of each weight. The pseudo-mean-CVaR efficient
frontier derived from these mean-variance weights are used as the
starting weights for finding the optimal portfolio, assuming there
is another weight that can provide a lower CVaR and/or a higher return.
We use MATLAB's built-in optimization function 'fmincon' for finding
an optimal efficient frontier. The objective function to be minimized
is the CVaR while the non-linear constraint to be satisfied is a set
return, the average return of the portfolio across the simulations
must be approximately equal to the constraint. We generate an efficient
frontier by using each of the historical mean-variance portfolio returns
as our non-linear constraints for finding the minimum CVaR. 

Next, we investigate the ability for multi-period optimization and
account for rebalancing in constructing the efficient frontier. We
first implement a simple model that rebalances back to the target
weight every 12 months and incurs no transaction costs. We integrate
the rebalancing function to our objective function in calculating
portfolio CVaRs and into our non-linear constraint for calculating
average portfolio returns across all simulations for our 'fmincon'
optimization. We are currently investigating the use of a decision
function for determining whether to rebalance at each specified time
period based on transaction cost, deviation from the target weights,
change in portfolio variance, or change in portfolio CVaR. 

We will compare our CVaR based efficient frontiers to their respective
mean-variance counterparts to determine the strengths and weaknesses
of both methods. We will use historical data as well as newly generated
simulation data for testing hypotheses. We may also investigate the
use of investor expectation in generating the simulation returns by
using the expected mean and expected standard deviation of each asset
class.\lyxline{\normalsize}


\subsection*{Rebalancing }

The literature reviewed up to this point only considers a single time
frame portfolio optimization, where an asset allocation is set at
the beginning of the period and the portfolio is untouched until the
end of the investment period. Seth J. Master's a simple rebalancing
strategy involves setting a target allocation and an investor only
rebalances when the allocation deviates beyond a set of trigger points.
For instance, if the trigger point is 3\% for all asset classes, then
an investor only rebalances when the weight for any asset class deviation
more than 3\% from the target weight. This is also known as a tolerance
band rebalancing strategy. According to Seth Master, any rebalancing
strategy should incorporate some basic assumptions. The benefit of
rebalancing is inversely proportional to an investor's risk preference:
if an investor is risk tolerant, meaning he is willing to endure higher
risk for higher potential returns, then his benchmarks will be smaller,
meaning he will rebalance less often. Assuming transaction costs are
fixed and not proportional to the transaction size, the cost of rebalancing
is linear: selling twice as much of an asset would cost twice as much.
The net benefit of rebalancing is the difference between the benefit
of rebalancing and the cost of rebalancing. 

Walter Sun extended the idea of Seth Master\textquoteright{}s paper
to incorporate dynamic programming to minimize cost of rebalancing.
Walter applies the idea to CAPM models, which assume that asset returns
are stationary, and that mean and variance are the primary portfolio
statistics of interest. The optimal strategy is that one rebalances
only when the expected cost of trading is less than the expected cost
of doing nothing. His conclusion is that periodic or tolerance band
rebalancing provide suboptimal rebalance portfolios. However, by treating
rebalancing problem as an optimization problem and solving it using
dynamic programming, he was able to reduce overall costs of portfolio
rebalancing. 

Taking rebalancing one step further, Gianfranco Guastaroba applied
rebalancing strategies to portfolio optimization model that uses Conditional
Value at Risk (CVaR) as a measure of risk, the same framework we are
using. The model incorporated rebalancing as a set of linear programming
constraints. He introduced a decision variable that indicated whether
to rebalance based on whether portfolio allocation deviated from a
certain quantile. He also specified a fixed cost and a variable cost
for buying/selling assets. The constraint was that, during every rebalancing
period, an investor rebalanced if net portfolio return taking into
account fixed and proportional transaction costs is at least the predetermined
required return. The paper then used four in-sample-out-of-sample
windows to test the model for different levels of minimum required
returns (0, 5\%, and 10\%) and different quantile measures (1\%, 5\%,
10\% and 25\%). He concluded that for a very risk-averse investor
the best choice is to rebalance two or three times in six months.
On the other hand, a less risk-averse investor should rebalance one
time or not rebalance at all. 

These papers give us a starting point for incorporating rebalancing
into our model. Our goal is to analyze and compare the different rebalancing
strategies available: a simple periodic strategy in which we rebalance
every few months, a tolerance-band strategy in which we rebalance
when allocation deviates beyond a predetermined range, or a dynamic
programming approach that actively calculates the expected cost of
future transactions. We will then incorporate the use of t-copulas
for fat tails, CVaR as a risk measure, and rebalancing as a portfolio
strategy to produce a realistic asset allocation framework for a large
institutional investor such as an endowment.


\subsubsection*{Implementation}

In our implementation, we adopt a 12-month periodic rebalancing strategy.
We have 5000 simulations of returns for seven asset classes, a set
of starting weights derived from the mean and variance framework,
and a set of fixed portfolio returns. Every 12 months, we sum up the
returns in that year and we distribute the portfolio value according
to a predetermined set of weights, and then compound it with the future
returns. 

Our rebalancing framework could thus be expressed as a linear programming
minimization problem: 

\begin{equation}
\min_{w_{1},w_{2},...w_{n}}\text{{CVaR}}(w_{1},w_{2},...,w_{n})\end{equation}
\begin{equation}
w_{1},w_{2},...,w_{n}>0\end{equation}
\begin{equation}
w_{1}+w_{2}+...+w_{n}=1\end{equation}
\begin{equation}
\tilde{R}(w_{1},w_{2},...,w_{n})=R(w_{1},w_{2},...,w_{n})\end{equation}
where $R$ is the fixed portfolio monthly return rate and $\tilde{R}$
is the calculated portfolio monthly return at each run of the simulation. 

Our goal is to find the set of weights that will minimize CVaR given
a fixed level of return. Our two linear constraints dictate that the
weights must be nonnegative since no borrowing is allowed and that
the weights sum up to one. We also include a nonlinear constraint.
Since we want to fix return, our nonlinear constraint is that our
final portfolio return $\tilde{R}$ is the same as the given fixed
portfolio return $R$. 

Our objective function is to find the weights that will minimize CVaR.
CVaR is calculated analatically by trying out a set of asset weights
all 5000 simulations. Each simulation gives a final portfolio value,
from which we could derive the monthly retun rate. For instance, suppose
we start with 1 (billion) endowment, and the final portfolio value
is 24.62 (billion). Suppose we simulate 36 months into the future,
rebalancing every 12 months, Then our monthly return rate is $\frac{{24.62^{1/35}-1}}{12}$
= 0.00799 monthly return rate. For each set of trying weights, we
go throught all 5000 simulations, giving us 5000 monthly return rates.
To calculate the CVaR, we take the average of the lowest 5\%, or 250
final returns. That is our CVaR. We will keep trying weigts in an
analytical fashion until we find the minimun CVaR. The MATLAB funtion
\textsf{fmincon} allows us to do this. The objective function and
the constraints are precisely the same as in the linear programming
problem. 

\lyxline{\normalsize}


\subsection*{Back Testing}


\section{Results}

{[}Results, data, graphs{]}

Given weights compounding are better than given weights rebalancing. 


\section{Discussion}

{[}Interpretation of results, implications{]}


\section{Conclusion}

{[}Concluding thoughts{]}
\end{document}
@
