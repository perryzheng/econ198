head	1.1;
access;
symbols;
locks; strict;
comment	@// @;
expand	@b@;


1.1
date	2009.11.19.21.56.36;	author idw3;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@
classdef class_efficientfrontiers
    properties
    
        rebalavgPortVal
        rebalavgFundsVals
    end
    methods
        
        function EFplotter(obj, plotcolor)
            
            try 
                obj.portSDs;
                  
                plot(obj.portSDs .* (sqrt(12) * 100), obj.portReturns .* (12 * 100), '-bo','LineWidth',0.5,...
                    'MarkerEdgeColor','k',...
                    'MarkerFaceColor', plotcolor,...                    
                    'MarkerSize',4)
                

            catch me1
            end
            
            try 
                obj.portCVaRs;
                
                plot(obj.portCVaRs .* (12) * (3 * 1e9), obj.portReturns .* (12 * 100), '-bo','LineWidth',0.5,...
                    'MarkerEdgeColor','k',...
                    'MarkerFaceColor', plotcolor,...                    
                    'MarkerSize',4)
            catch me2
            end
            
        end
        
        % Rebalancing is inherently GEOMETRIC!
        function rebalancedreturns(obj, simulatedrawreturns, rebalancemonth)
            numsims = size(simulatedrawreturns, 3);
            
            rebalfinalFundvalues = zeros(1, obj.NumPorts, numsims);
            rebalfinalPortvalue = zeros(1, obj.NumPorts, numsims);
            
            for i = 1:numsims
                tempout = calc_rebalance_cashflows_01(obj.portWts, simulatedrawreturns(:, :, i), rebalancemonth);
                rebalfinalFundvalues(:, :, i) = tempout{1};
                rebalfinalPortvalue(:, :, i) = tempout{2};
            end        
            obj.rebalavgFundsVals = mean(rebalfinalFundvalues, 3);
            
            obj.rebalavgPortVal = mean(rebalfinalPortvalue, 3);
            
            
        end

        
        
    end
end@
