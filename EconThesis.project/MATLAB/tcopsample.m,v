head	1.2;
access;
symbols;
locks; strict;
comment	@// @;
expand	@b@;


1.2
date	2010.01.19.17.05.05;	author idw3;	state Exp;
branches;
next	1.1;

1.1
date	2009.11.19.21.56.36;	author idw3;	state Exp;
branches;
next	;


desc
@@


1.2
log
@"fixed errors in class_simulations; added obj to methods in subc_ ... EF"
@
text
@
function y = tcopsample(nu, rho, GPDdrawresults, numofGPDdraws, samplemonths, NumofFunds, tcopTotalRuns)
    histannualreturns = 0;
    tcopfinalfundvalue = zeros(tcopTotalRuns, NumofFunds, numofGPDdraws);
    
    totalsimulations = tcopTotalRuns*numofGPDdraws;
    rawMonthlyReturns = zeros(samplemonths, NumofFunds, totalsimulations);
    
    for i = 1:numofGPDdraws
        % using arithmetic mean of GPD draws
        tcopoutput = drawtCopula_01(samplemonths, nu, tcopTotalRuns, GPDdrawresults{3}(1, :, i), ...
            GPDdrawresults{2}(1, :, i), rho, histannualreturns);
        
        % using geometric mean of GPD draws
        % tcopoutput = drawtCopula_01(samplemonths, nu, tcopTotalRuns, GPDdrawresults{1}(1, :, i), ...
            % GPDdrawresults{2}(1, :, i), rho, histannualreturns);        

        % tcopfinalfundvalue(:, :, i) = tcopoutput{5};
        
        rawMonthlyReturns(:, :, ((i-1)*tcopTotalRuns + 1):((i)*tcopTotalRuns)) = tcopoutput{3};
    end

    % meanfinalCVaR = mean(finalCVaRtcopRuns)

    y = {[], [], [], rawMonthlyReturns};
    
    % y = {finalCVaRtcopRuns, [], tcopAACR, rawMonthlyReturns};
    % y = {meanfinalCVaR, tcopfinalfundvalue, avgAnnReturnstcop};
end@


1.1
log
@*** empty log message ***
@
text
@a2 1

a3 1
   
a9 1

a19 1

@

