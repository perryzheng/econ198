head	1.1;
access;
symbols;
locks; strict;
comment	@// @;
expand	@b@;


1.1
date	2010.04.10.06.13.52;	author idw3;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@
function y = CVaR_gen_alg_01(avgFundReturns, returnconstraint, startweights)
    tic
    
    NumofFunds = size(avgFundReturns, 2);
    
    %
    hybridopts = optimset('Algorithm','active-set', 'TolFun', 1e-19, 'TolCon', 1e-19, ...
        'TolX', 1e-19, 'MaxFunEvals', 10000, 'MaxIter', 4000, 'UseParallel', 'always');
    
    %
    %'PopInitRange', [zeros(1, NumofFunds); ones(1, NumofFunds)],
    
    %
    
    options = gaoptimset('PopulationSize', [50 50], 'InitialPopulation', startweights, ...
        'Generations', 120, 'StallGenLimit', 75, 'TolFun', 1e-19, 'UseParallel', 'always',...
        'Vectorize', 'on', 'StallTimeLimit', 2400, 'EliteCount', 4, 'CrossoverFraction', 0.5,...
         'FitnessScalingFcn', {@@fitscalingprop}, 'MutationFcn', {@@mutationadaptfeasible},...
         'CrossoverFcn', {@@crossoverheuristic}, 'InitialPenalty', 2, 'PenaltyFactor', 25,...
         'HybridFcn', {@@fmincon, hybridopts});
    

    global globalreturnconstraint
    globalreturnconstraint = returnconstraint;
    
    
    global globalEFconstraints;
    ConSet = globalEFconstraints.ConSet;
    A = ConSet(:, 1:(NumofFunds));
    b = ConSet(:, (NumofFunds + 1));
    
    
    [x fval exitflag] = ga(@@gen_alg_min_cvar, NumofFunds, A, b, ...
        [], [], [], [], @@gen_alg_nonlinconstr, options);    
    %{
    A = ones(1, NumofFunds);
    b = 1;

    Aeq = [ones(1, NumofFunds); avgFundReturns];
    beq = [1; returnconstraint];

    LB = zeros(1, NumofFunds);
    UB = ones(1, NumofFunds);

    Aeq2 = [ones(1, NumofFunds)];
    beq2 = [1];
    
    [x fval exitflag] = ga(@@gen_alg_min_cvar, NumofFunds, [], [], ...
        Aeq2, beq2, LB, UB, @@gen_alg_nonlinconstr, options);    
    %}
    
toc

%{
tic

    [x2 fval2 exitflag] = ga(@@gen_alg_min_cvar, NumofFunds, [], [], ...
        Aeq, beq, LB, UB, @@gen_alg_nonlinconstr, options);

%{  
    [x fval exitflag output] = ga(@@gen_alg_min_cvar, NumofFunds, [], [], ...
        [], [], LB, UB, @@gen_alg_nonlinconstr, options);
%}



    % x = ga(fitnessfcn,nvars,A,b,Aeq,beq,LB,UB,nonlcon,options)

    toc
%}

    y = {x fval};
    
end
  


@
